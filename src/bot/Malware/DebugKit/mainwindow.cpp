#include "../SharedKernel/Systems/process.h"
#include "mainwindow.h"
#include "ui_mainwindow.h"

#ifdef Q_OS_WIN
    #include "../SharedKernel/Systems/Windows/windowsprocessrepository.h"
#endif

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);

    loadSystemDependantRepositories();
    disableTitleBarOfDockPanels();
}

MainWindow::~MainWindow()
{
    delete ui;
    delete processRepo_;
}

void MainWindow::on_processesCombo_opened()
{
    ui->processesCombo->clear();

    std::vector<systems::Process> processes = processRepo_->getAllProcesses();

    for(int i = processes.size() - 1 ; i >= 0 ; i--)
    {
        ui->processesCombo->addItem(processes[i].name());
    }
}

void MainWindow::disableTitleBarOfDockPanels()
{
    QWidget* titleWidget = new QWidget(this);
    ui->menuDock->setTitleBarWidget(titleWidget);
}

void MainWindow::loadSystemDependantRepositories()
{
#ifdef Q_OS_WIN
    this->processRepo_ = new systems::windows::WindowsProcessRepository;
#endif
}
