#include <QString>
#include <QtTest>

#include "../SharedKernel/Systems/Windows/windowsprocessrepository.h"

class ProcessRepositoryTests : public QObject
{
    Q_OBJECT

public:
    ProcessRepositoryTests();

private:
    systems::ProcessRepository* repo_;

private Q_SLOTS:
    // functions executed by QtTest before and after test suite
    void initTestCase();
    void cleanupTestCase();

    // functions executed by QtTest before and after each test
    //void init();
    //void cleanup();

    // test functions - all functions prefixed with "test" will be ran as tests
    void testGetAllProcesses_atLeastOne();
};

ProcessRepositoryTests::ProcessRepositoryTests()
{
}

void ProcessRepositoryTests::initTestCase()
{
#ifdef Q_OS_WIN
    this->repo_ = new systems::windows::WindowsProcessRepository();
#endif
}

void ProcessRepositoryTests::cleanupTestCase()
{
    delete this->repo_;
}

void ProcessRepositoryTests::testGetAllProcesses_atLeastOne()
{
    // Arrange

    // Act
    auto numberOfProcesses = this->repo_->getAllProcesses().size();

    // Assert
    QVERIFY2(numberOfProcesses > 0, "Couldn't properly retrieve the number of processes. (the OS has certainly at least one process!)");
}

QTEST_APPLESS_MAIN(ProcessRepositoryTests)

#include "tst_processrepositorytests.moc"
