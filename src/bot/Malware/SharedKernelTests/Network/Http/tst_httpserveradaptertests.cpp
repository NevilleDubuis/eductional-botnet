#include <QEventLoop>
#include <QNetworkRequest>
#include <QTest>

#include "../SharedKernel/Network/Messages/Client/giveinformationmessage.h"
#include "../SharedKernel/Network/Messages/Client/heartbeatmessage.h"
#include "../SharedKernel/Network/Messages/Client/hellomessage.h"
#include "tst_httpserveradaptertests.h"

void HttpServerAdapterTests::send_sendHelloMessage_ShouldReceive200HttpCode()
{
    // Arrange
    QEventLoop loop;
    network::messages::client::HelloMessage message;
    connect(&adapter_, SIGNAL(receive(messages::server::ServerMessage)), &loop, SLOT(quit()));

    // Act
    adapter_.send(message);
    loop.exec();

    // Assert
    QCOMPARE(adapter_.reply_->attribute(QNetworkRequest::HttpStatusCodeAttribute).toInt(), 200);
}

void HttpServerAdapterTests::send_sendGiveInformationMessage_ShouldReceive200HttpCode()
{
    // Arrange
    QEventLoop loop;
    network::messages::client::GiveInformationMessage message;
    connect(&adapter_, SIGNAL(receive(messages::server::ServerMessage)), &loop, SLOT(quit()));

    // Act
    adapter_.send(message);
    loop.exec();

    // Assert
    QCOMPARE(adapter_.reply_->attribute(QNetworkRequest::HttpStatusCodeAttribute).toInt(), 200);
}

void HttpServerAdapterTests::send_sendHeartbeatMessage_ShouldReceive200HttpCode()
{
    // Arrange
    QEventLoop loop;
    network::messages::client::HeartbeatMessage message;
    connect(&adapter_, SIGNAL(receive(messages::server::ServerMessage)), &loop, SLOT(quit()));

    // Act
    adapter_.send(message);
    loop.exec();

    // Assert
    QCOMPARE(adapter_.reply_->attribute(QNetworkRequest::HttpStatusCodeAttribute).toInt(), 200);
}

void HttpServerAdapterMock::onRequestFinished(QNetworkReply *reply)
{
    // Call the base method
    HttpServerAdapter::onRequestFinished(reply);

    // Hook the method to extract debug information
    // The pointer is marked to be deleted in the implementation of the adapter
    reply_ = reply;
}
