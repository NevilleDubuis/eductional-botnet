#ifndef HTTPATTACKWORKER_H
#define HTTPATTACKWORKER_H

#include <memory>

#include <QByteArray>
#include <QHostAddress>
#include <QTcpSocket>

#include "attackworkerbase.h"

namespace workers
{
    /**
     * @brief An implementation of attack using the method HTTP Flood (GET).
     *
     * The implementation floods the target with GET requests  without waiting for an answer.
     */
    class HttpAttackWorker : public AttackWorkerBase
    {
        Q_OBJECT

    public:
        /**
         * @brief Creates a new instance of the class HttpAttackWorker.
         * @param host The URL of the target.
         */
        HttpAttackWorker(QUrl host);

        /**
         * @brief Sets a boolean indicating whether the attack must send a single request.
         * @param singleShot
         */
        void setSingleShot(bool singleShot);

    private:
        void generateHttpHeader();
        bool initializeConnection();
        bool isInterruptionRequested();
        void sendPayload();
        bool tryObtainIp();

        QByteArray httpHeaderAsByteArray_;
        QString ip_;
        bool isSingleShot_;
        std::unique_ptr<QTcpSocket> socket_;

    public slots:
        /**
         * @brief Attacks the target continuously.
         */
        void doWork() override;
    };
}

#endif // HTTPATTACKWORKER_H
