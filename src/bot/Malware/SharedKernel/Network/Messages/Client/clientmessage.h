#ifndef CLIENTMESSAGE_H
#define CLIENTMESSAGE_H

#include <QJsonObject>
#include <QNetworkInterface>
#include <QObject>
#include <QString>

#include "clientopcode.h"

namespace network { namespace messages { namespace client
{
    /**
     * @brief A message sent by the client.
     */
    class ClientMessage : public QObject
    {
        Q_OBJECT

    private:
        /**
         * @brief A static field that stores the MAC address of the LAN for the sake of performance.
         *
         * The cache is invalidated when the process is stopped.
         */
        static QString cachedLanMacAddress_;

        /**
         * @brief The opcode that represents the semantic meaning of the message.
         */
        ClientOpcode opcode_;

        /**
         * @brief The MAC address of the computer, which identify the client on the server.
         */
        QString macAddress_;

        /**
         * @brief Gets the MAC address of the network card connected to the network.
         *
         * A computer can have many different network cards, such as some virtual ones
         * for virtualization. This is an helper to get the one connected to the LAN.
         *
         * @return The MAC address of the computer for the network card connected to the LAN.
         */
        QString getLanMacAddress();

    public:
        /**
         * @brief Creates a new instance of the class ClientMessage.
         * @param opcode The opcode that represents the message.
         */
        ClientMessage(ClientOpcode opcode);

        /**
         * @brief Gets the opcode of the message.
         */
        ClientOpcode opcode();

        /**
         * @brief Serializes the instance into a JSON object.
         */
        virtual QJsonObject toJson();
    };
}}}

#endif // CLIENTMESSAGE_H
