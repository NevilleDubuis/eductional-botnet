#ifndef STARTATTACKMESSAGE_H
#define STARTATTACKMESSAGE_H

#include <memory>

#include <QJsonObject>
#include <QString>
#include <QUrl>

#include "servermessage.h"

namespace network { namespace messages { namespace server
{
    /**
     * @brief A message that represents a request to attack a given target.
     */
    class StartAttackMessage : public ServerMessage
    {
        Q_OBJECT

    private:
        /**
         * @brief The identifier of the attack referenced on the server.
         */
        int idAttack_;

        /**
         * @brief The method of attack used against the target.
         */
        QString methodOfAttack_;

        /**
         * @brief The URL of the target.
         */
        QUrl target_;

    public:
        /**
         * @brief A static method to convert a JSON object into a new instance of StartAttackMessage.
         * @param json The JSON payload.
         */
        static std::shared_ptr<StartAttackMessage> fromJson(QJsonObject json);

        /**
         * @brief Creates a new instance of the class StartAttackMessage.
         * @param idAttack The identifier of the attack.
         * @param target The URL of the target.
         * @param methodOfAttack The method of attack.
         */
        StartAttackMessage(int idAttack, QUrl target, QString methodOfAttack);

        /**
         * @brief Gets the identifier of the attack referenced on the server.
         */
        int idAttack();

        /**
         * @brief Gets the method of attack used against the target.
         */
        QString methodOfAttack();

        /**
         * @brief Gets the URL of the target.
         */
        QUrl target();
    };
}}}

#endif // STARTATTACKMESSAGE_H
