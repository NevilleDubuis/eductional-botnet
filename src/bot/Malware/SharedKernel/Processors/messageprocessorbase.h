#ifndef MESSAGEPROCESSORBASE_H
#define MESSAGEPROCESSORBASE_H

#include <memory>

#include <QObject>

#include "../Network/serveradapter.h"
#include "../Network/Messages/Server/servermessage.h"

namespace processors
{
    /**
     * @brief The class represents how the client has to handle a given type of message.
     *
     * The idea behind separating the message from its processing is to loosely couple the two,
     * enabling to easily change the implementation/logic.
     */
    class MessageProcessorBase : public QObject
    {
        Q_OBJECT

    public:
        /**
         * @brief Processes the given \e message.
         * @param message The message to process.
         * @param serverAdapter A reference to the server adapter.
         */
        virtual void process(std::shared_ptr<network::messages::server::ServerMessage> message, network::ServerAdapter& serverAdapter) = 0;
    };
}

#endif // MESSAGEPROCESSORBASE_H
