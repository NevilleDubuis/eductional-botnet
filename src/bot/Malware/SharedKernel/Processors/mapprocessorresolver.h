#ifndef PROCESSORRESOLVER_H
#define PROCESSORRESOLVER_H

#include <QMap>

#include "processorresolverbase.h"

namespace processors
{
    /**
     * @brief An implemented based on a map.
     */
    class MapProcessorResolver : public ProcessorResolverBase
    {
    public:
        /**
         * @brief Creates a new instance of the class ProcessorResolver.
         */
        MapProcessorResolver();
        /**
         * @brief Binds the type of a given ServerMessage to a given MessageProcessorBase.
         * @param type The type of a ServerMessage.
         * @param processor A pointer to a MessageProcessorBase.
         */
        void bind(const QMetaObject &type, std::shared_ptr<MessageProcessorBase> processor) override;

        /**
         * @brief Resolves the MessageProcessorBase based on a given ServerMessage.
         * @param message
         * @return
         */
        std::shared_ptr<MessageProcessorBase> resolve(std::shared_ptr<network::messages::server::ServerMessage> message) override;

    private:
        /**
         * @brief The map that resolves the MessageProcessorBase based on the ServerMessage.
         */
        QMap<QString, std::shared_ptr<MessageProcessorBase>> resolutions_;
    };
}

#endif // PROCESSORRESOLVER_H
