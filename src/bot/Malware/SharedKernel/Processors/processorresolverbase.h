#ifndef PROCESSORRESOLVERBASE_H
#define PROCESSORRESOLVERBASE_H

#include <memory>

#include <QMetaObject>
#include <QObject>
#include <QString>

#include "../Network/Messages/Server/servermessage.h"
#include "messageprocessorbase.h"

namespace processors
{
    /**
     * @brief The mechanism that resolves a ServerMessage with its MessageProcessorBase.
     */
    class ProcessorResolverBase : public QObject
    {
        Q_OBJECT

    public:
        /**
         * @brief Binds the type of a given ServerMessage to a given MessageProcessorBase.
         * @param type The type of a ServerMessage.
         * @param processor A pointer to a MessageProcessorBase.
         */
        virtual void bind(const QMetaObject& type, std::shared_ptr<MessageProcessorBase> processor) = 0;

        /**
         * @brief Resolves the MessageProcessorBase based on a given ServerMessage.
         * @param message
         * @return
         */
        virtual std::shared_ptr<MessageProcessorBase> resolve(std::shared_ptr<network::messages::server::ServerMessage> message) = 0;
    };
}

#endif // PROCESSORRESOLVERBASE_H
