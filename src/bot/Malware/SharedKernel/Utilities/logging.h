#ifndef LOGGING_H
#define LOGGING_H

#include <functional>
#include <vector>

#include <QObject>
#include <QString>

namespace utilities
{
    /**
     * @brief The types of the logging.
     */
    enum class LoggingType
    {
        General,
        Network
    };

    /**
     * @brief The mechanism responsible for logging any messages in the application.
     */
    class Logging final : public QObject
    {
        Q_OBJECT

    public:
        /**
         * @brief Gets the unique reference to the logging mechanism.
         * @remarks This method follows the \e singleton pattern.
         */
        static Logging& get();

        /**
         * @brief Creates a new instance of the class Logging.
         */
        Logging();

        /**
         * @brief Writes a message.
         * @param message The message.
         * @param type The type of the message. Be default, the type is set to LoggingType::General.
         */
        void write(QString message, LoggingType type = LoggingType::General);

    signals:
        /**
         * @brief The signal is emitted when a new message is written.
         * @param message The message.
         * @param type The type of the message.
         */
        void newMessage(QString message, utilities::LoggingType type);
    };
}

#endif // LOGGING_H
