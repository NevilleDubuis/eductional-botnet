#include <windows.h>

#include "windowsinjector.h"

namespace systems { namespace windows
{
    void WindowsInjector::injectInProcess(systems::Process& process, QString libPath)
    {
        char* FullPath = new char[MAX_PATH];
        HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, process.id());
        sprintf(FullPath, libPath.toUtf8().data());
        LPVOID LoadLibraryAddr = (LPVOID)GetProcAddress(GetModuleHandle(L"kernel32.dll"), "LoadLibraryA");
        LPVOID LLParam = (LPVOID)VirtualAllocEx(hProcess, NULL, strlen(FullPath), MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE);
        WriteProcessMemory(hProcess, LLParam, FullPath, strlen(FullPath), NULL);
        HANDLE hThread = CreateRemoteThread(hProcess, NULL, NULL, (LPTHREAD_START_ROUTINE)LoadLibraryAddr, LLParam, NULL, NULL);
        WaitForSingleObject(hThread, 5000);
        CloseHandle(hThread);
        VirtualFreeEx(hProcess, LLParam, strlen(FullPath), MEM_RELEASE);
        CloseHandle(hProcess);
        delete [] FullPath;
    }
}}
