#ifndef PROCESS_H
#define PROCESS_H

#include <QString>

namespace systems
{
    /**
     * @brief Provides access to local processes and enables you to start and stop local system processes.
     */
    class Process
    {
    private:
        /**
         * @brief The unique identifier for the associated process.
         */
        int id_;

        /**
         * @brief The process name.
         */
        QString name_;

    public:
        /**
         * @brief Creates an new instance of the class Process.
         * @param id The process identifier.
         * @param name The process name.
         */
        Process(int id, QString name);

        /**
         * @brief The copy constructor to clone a given process.
         * @param process The process to clone.
         */
        Process(const Process& process);

        /**
         * @brief Swaps the object at the right location of the equal operator to the left object.
         * @param other The process to swap.
         * @remarks The operator equal is overriden to respect the \e copy-and-swap idiom.
         */
        Process& operator=(Process other);

        /**
         * @brief Gets the unique identifier for the associated process.
         */
        int id();

        /**
         * @brief The process name.
         */
        QString name();
    };
}

#endif // PROCESS_H
