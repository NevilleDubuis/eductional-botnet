#ifndef MALWARETHREAD_H
#define MALWARETHREAD_H

#include <memory>

#include <QThread>
#include <QTimer>

#include "../Network/Messages/Server/servermessage.h"
#include "../Network/serveradapter.h"
#include "../Processors/processorresolverbase.h"

namespace threads
{
    /*class MalwareThread : public QThread
    {
        Q_OBJECT

    public:
        MalwareThread();

    protected:
        void run() override;

    private slots:
        void updateServer();
        void onNewServerMessage(std::shared_ptr<network::messages::server::ServerMessage> message);
        void onServerReplied();
        void onFinished();

    private:
        bool hasEmittedHello_ = false;
        void setUpDependencies();
        std::unique_ptr<QTimer> timer_;
        std::unique_ptr<processors::ProcessorResolverBase> processorResolver_;
        std::shared_ptr<network::ServerAdapter> serverAdapter_;
    };*/
}

#endif // MALWARETHREAD_H
